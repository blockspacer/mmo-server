// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config/Cfg_MapData.proto

#include "config/Cfg_MapData.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
class Cfg_MapDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cfg_MapData> _instance;
} _Cfg_MapData_default_instance_;
static void InitDefaultsscc_info_Cfg_MapData_config_2fCfg_5fMapData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Cfg_MapData_default_instance_;
    new (ptr) ::Cfg_MapData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Cfg_MapData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cfg_MapData_config_2fCfg_5fMapData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cfg_MapData_config_2fCfg_5fMapData_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_config_2fCfg_5fMapData_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_config_2fCfg_5fMapData_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_config_2fCfg_5fMapData_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_config_2fCfg_5fMapData_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Cfg_MapData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Cfg_MapData, idmaptemplate_),
  PROTOBUF_FIELD_OFFSET(::Cfg_MapData, width_),
  PROTOBUF_FIELD_OFFSET(::Cfg_MapData, height_),
  PROTOBUF_FIELD_OFFSET(::Cfg_MapData, griddata_),
  PROTOBUF_FIELD_OFFSET(::Cfg_MapData, grid_high_factor_),
  PROTOBUF_FIELD_OFFSET(::Cfg_MapData, collision_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Cfg_MapData)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Cfg_MapData_default_instance_),
};

const char descriptor_table_protodef_config_2fCfg_5fMapData_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030config/Cfg_MapData.proto\"\202\001\n\013Cfg_MapDa"
  "ta\022\025\n\ridmaptemplate\030\001 \001(\r\022\r\n\005width\030\002 \001(\r"
  "\022\016\n\006height\030\003 \001(\r\022\020\n\010griddata\030\006 \003(\r\022\030\n\020gr"
  "id_high_factor\030\007 \001(\002\022\021\n\tcollision\030\010 \003(\rB"
  "\002H\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_config_2fCfg_5fMapData_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_config_2fCfg_5fMapData_2eproto_sccs[1] = {
  &scc_info_Cfg_MapData_config_2fCfg_5fMapData_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_config_2fCfg_5fMapData_2eproto_once;
static bool descriptor_table_config_2fCfg_5fMapData_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_config_2fCfg_5fMapData_2eproto = {
  &descriptor_table_config_2fCfg_5fMapData_2eproto_initialized, descriptor_table_protodef_config_2fCfg_5fMapData_2eproto, "config/Cfg_MapData.proto", 171,
  &descriptor_table_config_2fCfg_5fMapData_2eproto_once, descriptor_table_config_2fCfg_5fMapData_2eproto_sccs, descriptor_table_config_2fCfg_5fMapData_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_config_2fCfg_5fMapData_2eproto::offsets,
  file_level_metadata_config_2fCfg_5fMapData_2eproto, 1, file_level_enum_descriptors_config_2fCfg_5fMapData_2eproto, file_level_service_descriptors_config_2fCfg_5fMapData_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_config_2fCfg_5fMapData_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_config_2fCfg_5fMapData_2eproto), true);

// ===================================================================

void Cfg_MapData::InitAsDefaultInstance() {
}
class Cfg_MapData::_Internal {
 public:
};

Cfg_MapData::Cfg_MapData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cfg_MapData)
}
Cfg_MapData::Cfg_MapData(const Cfg_MapData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      griddata_(from.griddata_),
      collision_(from.collision_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&idmaptemplate_, &from.idmaptemplate_,
    static_cast<size_t>(reinterpret_cast<char*>(&grid_high_factor_) -
    reinterpret_cast<char*>(&idmaptemplate_)) + sizeof(grid_high_factor_));
  // @@protoc_insertion_point(copy_constructor:Cfg_MapData)
}

void Cfg_MapData::SharedCtor() {
  ::memset(&idmaptemplate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&grid_high_factor_) -
      reinterpret_cast<char*>(&idmaptemplate_)) + sizeof(grid_high_factor_));
}

Cfg_MapData::~Cfg_MapData() {
  // @@protoc_insertion_point(destructor:Cfg_MapData)
  SharedDtor();
}

void Cfg_MapData::SharedDtor() {
}

void Cfg_MapData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cfg_MapData& Cfg_MapData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cfg_MapData_config_2fCfg_5fMapData_2eproto.base);
  return *internal_default_instance();
}


void Cfg_MapData::InternalSwap(Cfg_MapData* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata Cfg_MapData::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Cfg_MapData* Arena::CreateMaybeMessage< ::Cfg_MapData >(Arena* arena) {
  return Arena::CreateInternal< ::Cfg_MapData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
