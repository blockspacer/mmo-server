// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config/Cfg_Achievement.proto

#include "config/Cfg_Achievement.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_config_2fCfg_5fAchievement_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cfg_Achievement_Row_config_2fCfg_5fAchievement_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_config_2fCfg_5fAchievement_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cfg_Achievement_Row_AwardData_config_2fCfg_5fAchievement_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_config_2fCfg_5fAchievement_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cfg_Achievement_Row_CheckData_config_2fCfg_5fAchievement_2eproto;
class Cfg_Achievement_Row_CheckDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cfg_Achievement_Row_CheckData> _instance;
} _Cfg_Achievement_Row_CheckData_default_instance_;
class Cfg_Achievement_Row_AwardDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cfg_Achievement_Row_AwardData> _instance;
} _Cfg_Achievement_Row_AwardData_default_instance_;
class Cfg_Achievement_RowDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cfg_Achievement_Row> _instance;
} _Cfg_Achievement_Row_default_instance_;
class Cfg_AchievementDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cfg_Achievement> _instance;
} _Cfg_Achievement_default_instance_;
static void InitDefaultsscc_info_Cfg_Achievement_config_2fCfg_5fAchievement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Cfg_Achievement_default_instance_;
    new (ptr) ::Cfg_Achievement();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Cfg_Achievement::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Cfg_Achievement_config_2fCfg_5fAchievement_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Cfg_Achievement_config_2fCfg_5fAchievement_2eproto}, {
      &scc_info_Cfg_Achievement_Row_config_2fCfg_5fAchievement_2eproto.base,}};

static void InitDefaultsscc_info_Cfg_Achievement_Row_config_2fCfg_5fAchievement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Cfg_Achievement_Row_default_instance_;
    new (ptr) ::Cfg_Achievement_Row();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Cfg_Achievement_Row::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Cfg_Achievement_Row_config_2fCfg_5fAchievement_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Cfg_Achievement_Row_config_2fCfg_5fAchievement_2eproto}, {
      &scc_info_Cfg_Achievement_Row_CheckData_config_2fCfg_5fAchievement_2eproto.base,
      &scc_info_Cfg_Achievement_Row_AwardData_config_2fCfg_5fAchievement_2eproto.base,}};

static void InitDefaultsscc_info_Cfg_Achievement_Row_AwardData_config_2fCfg_5fAchievement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Cfg_Achievement_Row_AwardData_default_instance_;
    new (ptr) ::Cfg_Achievement_Row_AwardData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Cfg_Achievement_Row_AwardData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cfg_Achievement_Row_AwardData_config_2fCfg_5fAchievement_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cfg_Achievement_Row_AwardData_config_2fCfg_5fAchievement_2eproto}, {}};

static void InitDefaultsscc_info_Cfg_Achievement_Row_CheckData_config_2fCfg_5fAchievement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Cfg_Achievement_Row_CheckData_default_instance_;
    new (ptr) ::Cfg_Achievement_Row_CheckData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Cfg_Achievement_Row_CheckData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cfg_Achievement_Row_CheckData_config_2fCfg_5fAchievement_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cfg_Achievement_Row_CheckData_config_2fCfg_5fAchievement_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_config_2fCfg_5fAchievement_2eproto[4];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_config_2fCfg_5fAchievement_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_config_2fCfg_5fAchievement_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_config_2fCfg_5fAchievement_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row_CheckData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row_CheckData, check_type_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row_CheckData, val0_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row_CheckData, val1_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row_CheckData, val2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row_AwardData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row_AwardData, type_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row_AwardData, num_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row_AwardData, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row, id_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row, sort_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row, name_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row, desc_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row, lev_req_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row, prof_req_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row, group_id_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row, check_data_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row, award_list_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row, award_exp_),
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement_Row, award_achipoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Cfg_Achievement, rows_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Cfg_Achievement_Row_CheckData)},
  { 9, -1, sizeof(::Cfg_Achievement_Row_AwardData)},
  { 17, -1, sizeof(::Cfg_Achievement_Row)},
  { 33, -1, sizeof(::Cfg_Achievement)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Cfg_Achievement_Row_CheckData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Cfg_Achievement_Row_AwardData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Cfg_Achievement_Row_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Cfg_Achievement_default_instance_),
};

const char descriptor_table_protodef_config_2fCfg_5fAchievement_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034config/Cfg_Achievement.proto\"\321\003\n\017Cfg_A"
  "chievement\022\"\n\004rows\030\001 \003(\0132\024.Cfg_Achieveme"
  "nt.Row\032\231\003\n\003Row\022\n\n\002id\030\001 \001(\r\022\014\n\004sort\030\002 \001(\r"
  "\022\014\n\004name\030\003 \001(\t\022\014\n\004desc\030\004 \001(\t\022\017\n\007lev_req\030"
  "\005 \001(\r\022\020\n\010prof_req\030\006 \001(\r\022\020\n\010group_id\030\007 \001("
  "\r\0222\n\ncheck_data\030\010 \001(\0132\036.Cfg_Achievement."
  "Row.CheckData\0222\n\naward_list\030\t \003(\0132\036.Cfg_"
  "Achievement.Row.AwardData\022\021\n\taward_exp\030\n"
  " \001(\r\022\027\n\017award_achipoint\030\013 \001(\r\032]\n\tCheckDa"
  "ta\022&\n\ncheck_type\030\001 \001(\0162\022.AchiConditionTy"
  "pe\022\014\n\004val0\030\002 \001(\r\022\014\n\004val1\030\003 \001(\r\022\014\n\004val2\030\004"
  " \001(\r\0324\n\tAwardData\022\014\n\004type\030\001 \001(\r\022\013\n\003num\030\002"
  " \001(\r\022\014\n\004flag\030\003 \001(\r*\347\003\n\021AchiConditionType"
  "\022\022\n\016CONDITION_NONE\020\000\022\023\n\017CONDITION_LEVEL\020"
  "\001\022\023\n\017CONDITION_MONEY\020\002\022\027\n\023CONDITION_ACHI"
  "POINT\020\003\022\031\n\025CONDITION_COMBATPOWER\020\004\022\031\n\025CO"
  "NDITION_USER_FRIEND\020\005\022\021\n\rCONDITION_VIP\020\006"
  "\022\022\n\016CONDITION_TASK\020\n\022\031\n\025CONDITION_SKILL_"
  "LEARN\020\013\022\027\n\023CONDITION_EQUIPMENT\020\024\022\034\n\030COND"
  "ITION_EQUIPMENT_SUIT\020\025\022\037\n\033CONDITION_EQUI"
  "PMENT_QUILITY\020\026\022 \n\034CONDITION_EQUIPMENT_A"
  "DDITION\020\027\022\036\n\032CONDITION_UPGRADE_ADDITION\020"
  "\030\022\031\n\025CONDITION_FORMULAITEM\020\031\022\031\n\025CONDITIO"
  "N_UPGRADEITEM\020\032\022\031\n\025CONDITION_FINISH_ACHI"
  "\020\033\022\030\n\024CONDITION_DATA_COUNT\020\036B\002H\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_config_2fCfg_5fAchievement_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_config_2fCfg_5fAchievement_2eproto_sccs[4] = {
  &scc_info_Cfg_Achievement_config_2fCfg_5fAchievement_2eproto.base,
  &scc_info_Cfg_Achievement_Row_config_2fCfg_5fAchievement_2eproto.base,
  &scc_info_Cfg_Achievement_Row_AwardData_config_2fCfg_5fAchievement_2eproto.base,
  &scc_info_Cfg_Achievement_Row_CheckData_config_2fCfg_5fAchievement_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_config_2fCfg_5fAchievement_2eproto_once;
static bool descriptor_table_config_2fCfg_5fAchievement_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_config_2fCfg_5fAchievement_2eproto = {
  &descriptor_table_config_2fCfg_5fAchievement_2eproto_initialized, descriptor_table_protodef_config_2fCfg_5fAchievement_2eproto, "config/Cfg_Achievement.proto", 1000,
  &descriptor_table_config_2fCfg_5fAchievement_2eproto_once, descriptor_table_config_2fCfg_5fAchievement_2eproto_sccs, descriptor_table_config_2fCfg_5fAchievement_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_config_2fCfg_5fAchievement_2eproto::offsets,
  file_level_metadata_config_2fCfg_5fAchievement_2eproto, 4, file_level_enum_descriptors_config_2fCfg_5fAchievement_2eproto, file_level_service_descriptors_config_2fCfg_5fAchievement_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_config_2fCfg_5fAchievement_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_config_2fCfg_5fAchievement_2eproto), true);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AchiConditionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_config_2fCfg_5fAchievement_2eproto);
  return file_level_enum_descriptors_config_2fCfg_5fAchievement_2eproto[0];
}
bool AchiConditionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 10:
    case 11:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 30:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Cfg_Achievement_Row_CheckData::InitAsDefaultInstance() {
}
class Cfg_Achievement_Row_CheckData::_Internal {
 public:
};

Cfg_Achievement_Row_CheckData::Cfg_Achievement_Row_CheckData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cfg_Achievement.Row.CheckData)
}
Cfg_Achievement_Row_CheckData::Cfg_Achievement_Row_CheckData(const Cfg_Achievement_Row_CheckData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&check_type_, &from.check_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&val2_) -
    reinterpret_cast<char*>(&check_type_)) + sizeof(val2_));
  // @@protoc_insertion_point(copy_constructor:Cfg_Achievement.Row.CheckData)
}

void Cfg_Achievement_Row_CheckData::SharedCtor() {
  ::memset(&check_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&val2_) -
      reinterpret_cast<char*>(&check_type_)) + sizeof(val2_));
}

Cfg_Achievement_Row_CheckData::~Cfg_Achievement_Row_CheckData() {
  // @@protoc_insertion_point(destructor:Cfg_Achievement.Row.CheckData)
  SharedDtor();
}

void Cfg_Achievement_Row_CheckData::SharedDtor() {
}

void Cfg_Achievement_Row_CheckData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cfg_Achievement_Row_CheckData& Cfg_Achievement_Row_CheckData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cfg_Achievement_Row_CheckData_config_2fCfg_5fAchievement_2eproto.base);
  return *internal_default_instance();
}


void Cfg_Achievement_Row_CheckData::InternalSwap(Cfg_Achievement_Row_CheckData* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata Cfg_Achievement_Row_CheckData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Cfg_Achievement_Row_AwardData::InitAsDefaultInstance() {
}
class Cfg_Achievement_Row_AwardData::_Internal {
 public:
};

Cfg_Achievement_Row_AwardData::Cfg_Achievement_Row_AwardData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cfg_Achievement.Row.AwardData)
}
Cfg_Achievement_Row_AwardData::Cfg_Achievement_Row_AwardData(const Cfg_Achievement_Row_AwardData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&type_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:Cfg_Achievement.Row.AwardData)
}

void Cfg_Achievement_Row_AwardData::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&type_)) + sizeof(flag_));
}

Cfg_Achievement_Row_AwardData::~Cfg_Achievement_Row_AwardData() {
  // @@protoc_insertion_point(destructor:Cfg_Achievement.Row.AwardData)
  SharedDtor();
}

void Cfg_Achievement_Row_AwardData::SharedDtor() {
}

void Cfg_Achievement_Row_AwardData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cfg_Achievement_Row_AwardData& Cfg_Achievement_Row_AwardData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cfg_Achievement_Row_AwardData_config_2fCfg_5fAchievement_2eproto.base);
  return *internal_default_instance();
}


void Cfg_Achievement_Row_AwardData::InternalSwap(Cfg_Achievement_Row_AwardData* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata Cfg_Achievement_Row_AwardData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Cfg_Achievement_Row::InitAsDefaultInstance() {
  ::_Cfg_Achievement_Row_default_instance_._instance.get_mutable()->check_data_ = const_cast< ::Cfg_Achievement_Row_CheckData*>(
      ::Cfg_Achievement_Row_CheckData::internal_default_instance());
}
class Cfg_Achievement_Row::_Internal {
 public:
  static const ::Cfg_Achievement_Row_CheckData& check_data(const Cfg_Achievement_Row* msg);
};

const ::Cfg_Achievement_Row_CheckData&
Cfg_Achievement_Row::_Internal::check_data(const Cfg_Achievement_Row* msg) {
  return *msg->check_data_;
}
Cfg_Achievement_Row::Cfg_Achievement_Row()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cfg_Achievement.Row)
}
Cfg_Achievement_Row::Cfg_Achievement_Row(const Cfg_Achievement_Row& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      award_list_(from.award_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_desc().empty()) {
    desc_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from._internal_has_check_data()) {
    check_data_ = new ::Cfg_Achievement_Row_CheckData(*from.check_data_);
  } else {
    check_data_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&award_achipoint_) -
    reinterpret_cast<char*>(&id_)) + sizeof(award_achipoint_));
  // @@protoc_insertion_point(copy_constructor:Cfg_Achievement.Row)
}

void Cfg_Achievement_Row::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cfg_Achievement_Row_config_2fCfg_5fAchievement_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&check_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&award_achipoint_) -
      reinterpret_cast<char*>(&check_data_)) + sizeof(award_achipoint_));
}

Cfg_Achievement_Row::~Cfg_Achievement_Row() {
  // @@protoc_insertion_point(destructor:Cfg_Achievement.Row)
  SharedDtor();
}

void Cfg_Achievement_Row::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete check_data_;
}

void Cfg_Achievement_Row::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cfg_Achievement_Row& Cfg_Achievement_Row::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cfg_Achievement_Row_config_2fCfg_5fAchievement_2eproto.base);
  return *internal_default_instance();
}


void Cfg_Achievement_Row::InternalSwap(Cfg_Achievement_Row* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata Cfg_Achievement_Row::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Cfg_Achievement::InitAsDefaultInstance() {
}
class Cfg_Achievement::_Internal {
 public:
};

Cfg_Achievement::Cfg_Achievement()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cfg_Achievement)
}
Cfg_Achievement::Cfg_Achievement(const Cfg_Achievement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      rows_(from.rows_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Cfg_Achievement)
}

void Cfg_Achievement::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cfg_Achievement_config_2fCfg_5fAchievement_2eproto.base);
}

Cfg_Achievement::~Cfg_Achievement() {
  // @@protoc_insertion_point(destructor:Cfg_Achievement)
  SharedDtor();
}

void Cfg_Achievement::SharedDtor() {
}

void Cfg_Achievement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cfg_Achievement& Cfg_Achievement::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cfg_Achievement_config_2fCfg_5fAchievement_2eproto.base);
  return *internal_default_instance();
}


void Cfg_Achievement::InternalSwap(Cfg_Achievement* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::PROTOBUF_NAMESPACE_ID::Metadata Cfg_Achievement::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Cfg_Achievement_Row_CheckData* Arena::CreateMaybeMessage< ::Cfg_Achievement_Row_CheckData >(Arena* arena) {
  return Arena::CreateInternal< ::Cfg_Achievement_Row_CheckData >(arena);
}
template<> PROTOBUF_NOINLINE ::Cfg_Achievement_Row_AwardData* Arena::CreateMaybeMessage< ::Cfg_Achievement_Row_AwardData >(Arena* arena) {
  return Arena::CreateInternal< ::Cfg_Achievement_Row_AwardData >(arena);
}
template<> PROTOBUF_NOINLINE ::Cfg_Achievement_Row* Arena::CreateMaybeMessage< ::Cfg_Achievement_Row >(Arena* arena) {
  return Arena::CreateInternal< ::Cfg_Achievement_Row >(arena);
}
template<> PROTOBUF_NOINLINE ::Cfg_Achievement* Arena::CreateMaybeMessage< ::Cfg_Achievement >(Arena* arena) {
  return Arena::CreateInternal< ::Cfg_Achievement >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
