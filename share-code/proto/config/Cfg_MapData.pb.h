// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config/Cfg_MapData.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_config_2fCfg_5fMapData_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_config_2fCfg_5fMapData_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_config_2fCfg_5fMapData_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_config_2fCfg_5fMapData_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_config_2fCfg_5fMapData_2eproto;
class Cfg_MapData;
class Cfg_MapDataDefaultTypeInternal;
extern Cfg_MapDataDefaultTypeInternal _Cfg_MapData_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::Cfg_MapData* Arena::CreateMaybeMessage<::Cfg_MapData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class Cfg_MapData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Cfg_MapData) */ {
 public:
  Cfg_MapData();
  virtual ~Cfg_MapData();

  Cfg_MapData(const Cfg_MapData& from);
  Cfg_MapData(Cfg_MapData&& from) noexcept
    : Cfg_MapData() {
    *this = ::std::move(from);
  }

  inline Cfg_MapData& operator=(const Cfg_MapData& from) {
    CopyFrom(from);
    return *this;
  }
  inline Cfg_MapData& operator=(Cfg_MapData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Cfg_MapData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Cfg_MapData* internal_default_instance() {
    return reinterpret_cast<const Cfg_MapData*>(
               &_Cfg_MapData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Cfg_MapData& a, Cfg_MapData& b) {
    a.Swap(&b);
  }
  inline void Swap(Cfg_MapData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Cfg_MapData* New() const final {
    return CreateMaybeMessage<Cfg_MapData>(nullptr);
  }

  Cfg_MapData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Cfg_MapData>(arena);
  }
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Cfg_MapData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Cfg_MapData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_config_2fCfg_5fMapData_2eproto);
    return ::descriptor_table_config_2fCfg_5fMapData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGriddataFieldNumber = 6,
    kCollisionFieldNumber = 8,
    kIdmaptemplateFieldNumber = 1,
    kWidthFieldNumber = 2,
    kHeightFieldNumber = 3,
    kGridHighFactorFieldNumber = 7,
  };
  // repeated uint32 griddata = 6;
  int griddata_size() const;
  private:
  int _internal_griddata_size() const;
  public:
  void clear_griddata();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_griddata(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_griddata() const;
  void _internal_add_griddata(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_griddata();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 griddata(int index) const;
  void set_griddata(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_griddata(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      griddata() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_griddata();

  // repeated uint32 collision = 8;
  int collision_size() const;
  private:
  int _internal_collision_size() const;
  public:
  void clear_collision();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_collision(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_collision() const;
  void _internal_add_collision(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_collision();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 collision(int index) const;
  void set_collision(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_collision(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      collision() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_collision();

  // uint32 idmaptemplate = 1;
  void clear_idmaptemplate();
  ::PROTOBUF_NAMESPACE_ID::uint32 idmaptemplate() const;
  void set_idmaptemplate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_idmaptemplate() const;
  void _internal_set_idmaptemplate(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 width = 2;
  void clear_width();
  ::PROTOBUF_NAMESPACE_ID::uint32 width() const;
  void set_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_width() const;
  void _internal_set_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 height = 3;
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float grid_high_factor = 7;
  void clear_grid_high_factor();
  float grid_high_factor() const;
  void set_grid_high_factor(float value);
  private:
  float _internal_grid_high_factor() const;
  void _internal_set_grid_high_factor(float value);
  public:

  // @@protoc_insertion_point(class_scope:Cfg_MapData)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > griddata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > collision_;
  ::PROTOBUF_NAMESPACE_ID::uint32 idmaptemplate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 width_;
  ::PROTOBUF_NAMESPACE_ID::uint32 height_;
  float grid_high_factor_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_config_2fCfg_5fMapData_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Cfg_MapData

// uint32 idmaptemplate = 1;
inline void Cfg_MapData::clear_idmaptemplate() {
  idmaptemplate_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Cfg_MapData::_internal_idmaptemplate() const {
  return idmaptemplate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Cfg_MapData::idmaptemplate() const {
  // @@protoc_insertion_point(field_get:Cfg_MapData.idmaptemplate)
  return _internal_idmaptemplate();
}
inline void Cfg_MapData::_internal_set_idmaptemplate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  idmaptemplate_ = value;
}
inline void Cfg_MapData::set_idmaptemplate(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_idmaptemplate(value);
  // @@protoc_insertion_point(field_set:Cfg_MapData.idmaptemplate)
}

// uint32 width = 2;
inline void Cfg_MapData::clear_width() {
  width_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Cfg_MapData::_internal_width() const {
  return width_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Cfg_MapData::width() const {
  // @@protoc_insertion_point(field_get:Cfg_MapData.width)
  return _internal_width();
}
inline void Cfg_MapData::_internal_set_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  width_ = value;
}
inline void Cfg_MapData::set_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:Cfg_MapData.width)
}

// uint32 height = 3;
inline void Cfg_MapData::clear_height() {
  height_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Cfg_MapData::_internal_height() const {
  return height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Cfg_MapData::height() const {
  // @@protoc_insertion_point(field_get:Cfg_MapData.height)
  return _internal_height();
}
inline void Cfg_MapData::_internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  height_ = value;
}
inline void Cfg_MapData::set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:Cfg_MapData.height)
}

// repeated uint32 griddata = 6;
inline int Cfg_MapData::_internal_griddata_size() const {
  return griddata_.size();
}
inline int Cfg_MapData::griddata_size() const {
  return _internal_griddata_size();
}
inline void Cfg_MapData::clear_griddata() {
  griddata_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Cfg_MapData::_internal_griddata(int index) const {
  return griddata_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Cfg_MapData::griddata(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_MapData.griddata)
  return _internal_griddata(index);
}
inline void Cfg_MapData::set_griddata(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  griddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cfg_MapData.griddata)
}
inline void Cfg_MapData::_internal_add_griddata(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  griddata_.Add(value);
}
inline void Cfg_MapData::add_griddata(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_griddata(value);
  // @@protoc_insertion_point(field_add:Cfg_MapData.griddata)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Cfg_MapData::_internal_griddata() const {
  return griddata_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Cfg_MapData::griddata() const {
  // @@protoc_insertion_point(field_list:Cfg_MapData.griddata)
  return _internal_griddata();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Cfg_MapData::_internal_mutable_griddata() {
  return &griddata_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Cfg_MapData::mutable_griddata() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_MapData.griddata)
  return _internal_mutable_griddata();
}

// float grid_high_factor = 7;
inline void Cfg_MapData::clear_grid_high_factor() {
  grid_high_factor_ = 0;
}
inline float Cfg_MapData::_internal_grid_high_factor() const {
  return grid_high_factor_;
}
inline float Cfg_MapData::grid_high_factor() const {
  // @@protoc_insertion_point(field_get:Cfg_MapData.grid_high_factor)
  return _internal_grid_high_factor();
}
inline void Cfg_MapData::_internal_set_grid_high_factor(float value) {
  
  grid_high_factor_ = value;
}
inline void Cfg_MapData::set_grid_high_factor(float value) {
  _internal_set_grid_high_factor(value);
  // @@protoc_insertion_point(field_set:Cfg_MapData.grid_high_factor)
}

// repeated uint32 collision = 8;
inline int Cfg_MapData::_internal_collision_size() const {
  return collision_.size();
}
inline int Cfg_MapData::collision_size() const {
  return _internal_collision_size();
}
inline void Cfg_MapData::clear_collision() {
  collision_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Cfg_MapData::_internal_collision(int index) const {
  return collision_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Cfg_MapData::collision(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_MapData.collision)
  return _internal_collision(index);
}
inline void Cfg_MapData::set_collision(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  collision_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cfg_MapData.collision)
}
inline void Cfg_MapData::_internal_add_collision(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  collision_.Add(value);
}
inline void Cfg_MapData::add_collision(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_collision(value);
  // @@protoc_insertion_point(field_add:Cfg_MapData.collision)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Cfg_MapData::_internal_collision() const {
  return collision_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Cfg_MapData::collision() const {
  // @@protoc_insertion_point(field_list:Cfg_MapData.collision)
  return _internal_collision();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Cfg_MapData::_internal_mutable_collision() {
  return &collision_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Cfg_MapData::mutable_collision() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_MapData.collision)
  return _internal_mutable_collision();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_config_2fCfg_5fMapData_2eproto
